param(
  [string]$DatabaseUrl,
  [string]$Token,
  [switch]$UseCompose,
  [switch]$RunMigrations
)

$repoRoot = Split-Path -Parent $MyInvocation.MyCommand.Path
Set-Location $repoRoot

Write-Host "=== Beebo Memory MCP: Dev Setup (Windows) ===" -ForegroundColor Cyan

# Ensure .env exists
$envPath = Join-Path $repoRoot ".env"
if (-not (Test-Path $envPath)) {
  @"
# Generated by scripts/dev-setup.ps1
DATABASE_URL=
DATABASE_SSL=false
MCP_TOKEN=
OPENAI_API_KEY=
"@ | Out-File -Encoding utf8 $envPath
  Write-Host "Created .env (fill DATABASE_URL if not using Docker)" -ForegroundColor Yellow
}

# Set env vars for current session (do not echo values)
if ($DatabaseUrl) { $env:DATABASE_URL = $DatabaseUrl }
if ($Token) { $env:MCP_TOKEN = $Token }

# Compose up (local Postgres + app)
if ($UseCompose) {
  Write-Host "Starting Docker Compose services..." -ForegroundColor Green
  docker compose up -d
}

# Run migrations (optional)
if ($RunMigrations) {
  if (-not $env:DATABASE_URL) {
    Write-Error "DATABASE_URL is not set. Provide -DatabaseUrl or set it in .env before running migrations."
    exit 1
  }
  Write-Host "Running migrations against: $($env:DATABASE_URL.Split('@')[-1])" -ForegroundColor Green
  npx node-pg-migrate up
}

Write-Host "Done. Next steps:" -ForegroundColor Cyan
Write-Host "- To run locally without Docker: 'npm run dev' (ensure DATABASE_URL is set and DATABASE_SSL=false for local)"
Write-Host "- To test: 'curl http://localhost:10000/ping'"
Write-Host "- To talk via CLI: set MCP_BRIDGE_URL and MCP_TOKEN, then 'npm run listener'"
